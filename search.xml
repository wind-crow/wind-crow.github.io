<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ACTF2020新生赛_Exec</title>
    <url>/2021/11/14/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/</url>
    <content><![CDATA[<p>​        这个题主要考查的是常见管道符以及Linux命令的使用。本人小白一个，有错希望大佬指出，如有更好的方法欢迎交流。</p>
<span id="more"></span>

<p><strong>常见管道符</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. | 直接执行 | 后面的语句</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2. || 如果前面的命令是错的，就执行 || 后面的语句;否则执行前面的</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3. &amp;  无论真假 &amp; 前面和后面的命令都需要执行</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4. ; (linux下的，与 &amp;作用一样)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5. cat 文件名(要绝对路径或者相对路径)：获取文件内容</span><br></pre></td></tr></table></figure>

<ul>
<li>输入127.0.0.1|ls，根据返回结果查看管道符是否被过滤，结果如下图，没有被过滤</li>
</ul>
<p><img src="/2021/11/14/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/image-20211114141717349.png" alt="image-20211114141717349"></p>
<ul>
<li>查看根目录，发现flag文件</li>
</ul>
<p><img src="/2021/11/14/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/image-20211114142129088.png" alt="image-20211114142129088"></p>
<ul>
<li>用cat查看flag文件</li>
</ul>
<p><img src="/2021/11/14/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/image-20211114142237974.png" alt="image-20211114142237974"></p>
]]></content>
      <categories>
        <category>ctf习题</category>
      </categories>
      <tags>
        <tag>web练习题</tag>
        <tag>BUUCTF</tag>
        <tag>ping</tag>
        <tag>命令执行漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>HCTF 2018 WarmUp的write_up</title>
    <url>/2021/11/02/test/</url>
    <content><![CDATA[<p>本人菜鸟一个，大佬轻喷。</p>
<hr>
<span id="more"></span>

<ul>
<li>打开靶机环境发现就一个笑脸，F12查看网页的前端源码，发现一个source.php的信息</li>
</ul>
<p><img src="/2021/11/02/test/image-20211101202735658.png" alt="image-20211101202735658"></p>
<ul>
<li>打开source.php后，返回的页面中由php代码，现在就是理解给出的php代码</li>
</ul>
<p><img src="/2021/11/02/test/image-20211102153801692.png" alt="image-20211102153801692"></p>
<ul>
<li><p>接下来我们就需要了解其中的一些函数：</p>
<p>is_string()  函数：检测变量是否是字符串，如果是字符串返回true，否则返回false</p>
<p>in_array()  函数：搜索数组中是否存在指定的值  ，数组中存在指定值返回true，否则返回false</p>
<p>mb_substr() 函数： 从一个字符串中，提取从指定位置开始，一定长度的字符串。如果存在则返回字符串的提取部分，不存在返回false或一个空字符串</p>
<p>mb_strpos() 函数：查找string在一个string首次出现的位置</p>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;<span class="variable">$page</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>]; </span><br><span class="line">            <span class="comment">/*创建了一个关联数组，并给指定键赋值</span></span><br><span class="line"><span class="comment">              与$whitelist[&#x27;source&#x27;] = source.php;</span></span><br><span class="line"><span class="comment">              $whitelist[&#x27;hint&#x27;] = hint.php;语句含义相同 */</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !is_string(<span class="variable">$page</span>)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//查找$page是否在数组$whitelist中</span></span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//提取从下标为0开始，长度为mb_strpos($page.&#x27;?&#x27;,&#x27;?&#x27;)的字符串</span></span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">                <span class="comment">//在$page字符串加上?,然后在该合成字符串中查找?出现的第一次位置并返回</span></span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = urldecode(<span class="variable">$page</span>);</span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$test</span>)</span><br><span class="line">        &amp;&amp; is_string(<span class="variable">$test</span>)</span><br><span class="line">        &amp;&amp; emmm::checkFile(<span class="variable">$test</span>)</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;you are true!&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; is_string(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>]; <span class="comment">//注意include是文件包含函数()</span></span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>由之前发现的hint.php文件的信息打开，如下图</li>
</ul>
<p><img src="/2021/11/02/test/image-20211102154047442.png" alt="image-20211102154047442"></p>
<ul>
<li>所以构建hint.php?ffffllllaaaagggg ,hint.php?../ffffllllaaaagggg, hint.php?../../ffffllllaaaagggg等尝试，最后成功试出。</li>
</ul>
<p><img src="/2021/11/02/test/image-20211102154524705.png" alt="image-20211102154524705"></p>
]]></content>
      <categories>
        <category>ctf习题</category>
      </categories>
      <tags>
        <tag>web练习题</tag>
        <tag>BUUCTF</tag>
        <tag>PHP代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>ACTF2020新生赛_Include</title>
    <url>/2021/11/14/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Include/</url>
    <content><![CDATA[<p>​        这个题主要考查的是php封装协议。本人小白一个，有错希望大佬指出，如有更好的方法欢迎交流。</p>
<span id="more"></span>

<ul>
<li><p>首先 F12 查看网页前端源码，没有什么隐藏信息</p>
</li>
<li><p>然后用Burp Suite抓包，也没发现有什么页面跳转，如下图所示    </p>
</li>
</ul>
<p><img src="/2021/11/14/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Include/image-20211113224115711.png" alt="image-20211113224115711">      </p>
<ul>
<li><p>发现它文件包含的文件名是flag.php，还提问你能发现flag。猜测flag在这个flag.php文件中，但是前端没有显示，所以尝试把flag.php源码输出</p>
</li>
<li><p>构建payload：<a href="http://c6220dd2-f0d2-4a5b-919b-b9b6ce8c077f.node4.buuoj.cn:81/?file=php://filter/read=convert.base64-encode/resource=flag.php%EF%BC%8C">http://c6220dd2-f0d2-4a5b-919b-b9b6ce8c077f.node4.buuoj.cn:81/?file=php://filter/read=convert.base64-encode/resource=flag.php，</a></p>
</li>
<li><p>如果不理解这个payload可以看一下这位大佬<a href="https://www.cnblogs.com/shellr00t/p/7638034.html">sm0nk</a>写的博客</p>
</li>
</ul>
<p><img src="/2021/11/14/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Include/image-20211113224849752.png" alt="image-20211113224849752"></p>
<ul>
<li>由于经过base64加密，解密一下得到flag</li>
</ul>
<p><img src="/2021/11/14/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Include/image-20211113225129535.png" alt="image-20211113225129535"></p>
]]></content>
      <categories>
        <category>ctf习题</category>
      </categories>
      <tags>
        <tag>web练习题</tag>
        <tag>BUUCTF</tag>
        <tag>文件包含</tag>
      </tags>
  </entry>
  <entry>
    <title>强网杯2019_随便注</title>
    <url>/2021/11/04/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%9A%8F%E4%BE%BF%E6%B3%A8/</url>
    <content><![CDATA[<p>​    这个题主要考查的是堆叠注入。本人小白一个，有错希望大佬指出，如有更好的方法欢迎交流。</p>
<span id="more"></span>

<ul>
<li>输入1’ 报错，说明使用了单引号闭合</li>
</ul>
<p><img src="/2021/11/04/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%9A%8F%E4%BE%BF%E6%B3%A8/image-20211104164116718.png" alt="image-20211104164116718"></p>
<ul>
<li>输入下列payload后没有什么有用信息</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1<span class="string">&#x27; or &#x27;</span>1<span class="string">&#x27;=&#x27;</span>1</span><br></pre></td></tr></table></figure>

<p><img src="/2021/11/04/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%9A%8F%E4%BE%BF%E6%B3%A8/image-20211104164155636.png" alt="image-20211104164155636"></p>
<ul>
<li>在输入union select查询语句后，返回截面为下图。说明一些关键字被正则匹配给过滤了</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; union select database(),version() --+</span><br></pre></td></tr></table></figure>

<p><img src="/2021/11/04/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%9A%8F%E4%BE%BF%E6%B3%A8/image-20211104163852628.png" alt="image-20211104163852628"></p>
<ul>
<li>实在没法了，看了一下其他师傅写的wp，发现是用到<a href="https://www.cnblogs.com/backlion/p/9721687.html">堆叠注入</a></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;; show databases;  #查看数据库</span><br></pre></td></tr></table></figure>

<p><img src="/2021/11/04/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%9A%8F%E4%BE%BF%E6%B3%A8/image-20211104164342551.png" alt="image-20211104164342551"></p>
<ul>
<li>在用下列语句查看表，发现有两张表，表名分别为`1919810931114514`,words</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;; show tables; #查看表</span><br></pre></td></tr></table></figure>

<p><img src="/2021/11/04/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%9A%8F%E4%BE%BF%E6%B3%A8/image-20211104164435930.png" alt="image-20211104164435930"></p>
<ul>
<li>用显示表结构的语句查询</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#显示表结构的2种方法</span><br><span class="line">show columns from 表名</span><br><span class="line">desc 表名</span><br></pre></td></tr></table></figure>

<p>​        <strong>如下图显示的是表words的结构</strong></p>
<p><img src="/2021/11/04/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%9A%8F%E4%BE%BF%E6%B3%A8/image-20211104164555444.png" alt="image-20211104164555444">        <strong>如下图显示的是表`1919810931114514`的结构</strong><img src="/2021/11/04/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%9A%8F%E4%BE%BF%E6%B3%A8/image-20211104164756038.png" alt="image-20211104164756038"></p>
<p>​        经过上面的返回结果来看，可以推测出输入的值经过过滤，最后是在words表中提取相关信息并返回。但是现在flag在`1919810931114514` 中。</p>
<ul>
<li><h5 id="方法一：改表名"><a href="#方法一：改表名" class="headerlink" title="方法一：改表名"></a>方法一：改表名</h5><ol>
<li><p>把words的表名改为words123等</p>
</li>
<li><p>然后把`1919810931114514` 表名改为words（在这个过程中需注意表名是纯数字时，要这样写`1919810931114514` ）</p>
</li>
<li><p> 然后原来的`1919810931114514` 表(现在修改为表名为words)增加一列 id</p>
</li>
</ol>
<p>payload如下</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;; rename table words to words1;  rename table `1919810931114514` to words; alter table words add column id int primary key auto_increment; </span><br></pre></td></tr></table></figure>

<ul>
<li>再次输入1成功得到flag</li>
</ul>
<p><img src="/2021/11/04/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%9A%8F%E4%BE%BF%E6%B3%A8/image-20211104172657257.png" alt="image-20211104172657257"></p>
<ul>
<li><h5 id="方法二：预处理"><a href="#方法二：预处理" class="headerlink" title="方法二：预处理"></a>方法二：预处理</h5><p><a href="https://www.cnblogs.com/wjw-zm/p/12359735.html">借鉴这位师傅的wp</a></p>
<p><a href="https://www.runoob.com/php/php-mysql-prepared-statements.html">MySQL预处理的知识</a></p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">prepare sql_name from sql语句 #预定义SQL语句</span><br><span class="line">execute sql_name  #执行预定义SQL语句</span><br><span class="line">(deallocate | drop) prepare sql_name #删除预定义SQL语句</span><br></pre></td></tr></table></figure>



<ul>
<li><h5 id="方法三-MySQL的handler"><a href="#方法三-MySQL的handler" class="headerlink" title="方法三:  MySQL的handler"></a>方法三:  MySQL的handler</h5><p><a href="https://blog.csdn.net/qq_43427482/article/details/109898934">MySQL 之 handler 的详细使用及说明</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>ctf习题</category>
      </categories>
      <tags>
        <tag>web练习题</tag>
        <tag>BUUCTF</tag>
        <tag>sql注入</tag>
        <tag>堆叠注入</tag>
        <tag>奇葩的姿势</tag>
      </tags>
  </entry>
  <entry>
    <title>极客大挑战2019_EasySQL</title>
    <url>/2021/11/04/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-EasySQL/</url>
    <content><![CDATA[<p>​        这个题主要考查的是对用户名和密码的查询。本人小白一个，有错希望大佬指出，如有更好的方法欢迎交流。</p>
<span id="more"></span>

<ul>
<li>在输入单引号时报错了,说明存在注入</li>
</ul>
<img src="/2021/11/04/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-EasySQL/image-20211104162042227.png" alt="image-20211104162042227">

<ul>
<li>在MySQL数据库中一般查询用户名和密码是否正确时，通常会使用这些语句</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$uname = $_GET[&#x27;username&#x27;];</span><br><span class="line">$passwd = $_GET[&#x27;password&#x27;];</span><br><span class="line">select * from 表名 where username = &#x27;$uname&#x27; and  password = &#x27;passwd&#x27;</span><br></pre></td></tr></table></figure>

<ul>
<li>然后可以输入下图用户名和密码尝试闭合</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">admin&#x27; or &#x27;1&#x27;=&#x27;1</span><br><span class="line">123456&#x27; or &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure>

<p><img src="/2021/11/04/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-EasySQL/image-20211104160334757.png" alt="image-20211104160334757"></p>
<ul>
<li>然后得到flag</li>
</ul>
<p><img src="/2021/11/04/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-EasySQL/image-20211104162629073.png" alt="image-20211104162629073"></p>
]]></content>
      <categories>
        <category>ctf习题</category>
      </categories>
      <tags>
        <tag>web练习题</tag>
        <tag>BUUCTF</tag>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title>极客大挑战2019_Http</title>
    <url>/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/</url>
    <content><![CDATA[<p>​        这个题主要考查的是http的知识。本人小白一个，有错希望大佬指出，如有更好的方法欢迎交流。</p>
<span id="more"></span>

<ul>
<li>检查页面发现来超链接</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/image-20211114160430072.png" alt="image-20211114160430072"></p>
<p>接下来我们需要了解http请求头的一些知识</p>
<ol>
<li>Host：请求资源的目的地址和端口号</li>
<li>User-Agent：包含的信息有客户端的操作系统，浏览器和其他属性</li>
<li>Referer：包含一个URL，代表当前访问URL的上一个URL，也就是用户从什么地方来到本页面的</li>
<li>x-forwarded-for：它代表请求端的IP</li>
</ol>
<ul>
<li>点击超链接后返回如下图所示，意思是不是从<a href="https://sycsecret.buuoj.cn跳转过来的./">https://Sycsecret.buuoj.cn跳转过来的。</a></li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/image-20211114160543483.png" alt="image-20211114160543483"></p>
<ul>
<li>​    修改referer的内容为<a href="https://sycsecret.buuoj.cn,返回页面如下图,意思要修改user-agent的内容为syclover/">https://Sycsecret.buuoj.cn，返回页面如下图，意思要修改User-Agent的内容为Syclover</a></li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/image-20211114161011657.png" alt="image-20211114161011657"></p>
<ul>
<li>修改User-Agent后，又返回说不是从本地访问的，所以修改x-forwarded-for 127.0.0.1</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/image-20211114161237623.png" alt="image-20211114161237623"></p>
<ul>
<li>返回flag</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/image-20211114161848198.png" alt="image-20211114161848198"></p>
]]></content>
      <categories>
        <category>ctf习题</category>
      </categories>
      <tags>
        <tag>web练习题</tag>
        <tag>BUUCTF</tag>
        <tag>http</tag>
      </tags>
  </entry>
  <entry>
    <title>极客大挑战2019_Knife</title>
    <url>/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/</url>
    <content><![CDATA[<p>​        这个题主要考查的是一句话木马和连接工具的使用。本人小白一个，有错希望大佬指出，如有更好的方法欢迎交流。</p>
<span id="more"></span>

<ul>
<li>根据页面一句话木马都给出来了，还提示用菜刀</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/image-20211114155359077.png" alt="image-20211114155359077"></p>
<ul>
<li>用蚁剑或者菜刀连接，如下图</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/image-20211114155536979.png" alt="image-20211114155536979"></p>
<ul>
<li>在根目录下找到了flag文件，打开得到flag</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/image-20211114155500668.png" alt="image-20211114155500668"></p>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/image-20211114155511477.png" alt="image-20211114155511477"></p>
]]></content>
      <categories>
        <category>ctf习题</category>
      </categories>
      <tags>
        <tag>web练习题</tag>
        <tag>BUUCTF</tag>
        <tag>一句话木马</tag>
      </tags>
  </entry>
  <entry>
    <title>极客大挑战2019_LoveSQL</title>
    <url>/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/</url>
    <content><![CDATA[<p>​        这个题主要考查的是通过information_schemas数据库的sql注入。本人小白一个，有错希望大佬指出，如有更好的方法欢迎交流。</p>
<span id="more"></span>

<ul>
<li>首先使用万能密码看看会不会返回什么有用信息</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/image-20211114143435804.png" alt="image-20211114143435804"></p>
<ul>
<li>返回了一个用户名和密码，然后我们可以根据正确的账号密码，由order by确定返回的信息的列数</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/image-20211114143522866.png" alt="image-20211114143522866"></p>
<ul>
<li>由于到order by 4失败，而order by 3成功，所以确定列数是3</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/image-20211114144046034.png" alt="image-20211114144046034"></p>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/image-20211114144114047.png" alt="image-20211114144114047"></p>
<ul>
<li>构建payload：-1’ union select 1,database(),version()# 获得数据库的名字geek</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/image-20211114144519129.png" alt="image-20211114144519129"></p>
<ul>
<li><p>访问information_schema数据库查看geek数据库有哪些表，payload为：</p>
<p>-1’ union select 1,table_schema,group_concat(table_name) from information_schema.tables where table_schema=’geek’ #</p>
<p>报出两个表，然后再查看表结构</p>
</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/image-20211114150213614.png" alt="image-20211114150213614"></p>
<ul>
<li><p>分别查看geekuser，l0ve1ysq1表结构，payload为：</p>
<p>-1’ union select 1,table_name,group_concat(column_name) from information_schema.columns where table_name =  ‘geekuser’#</p>
<p>geekuser表有id，username，paasword三个字段名</p>
<p>l0ve1ysq1表有id，username，password三个字段名</p>
</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/image-20211114150943034.png" alt="image-20211114150943034"></p>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/image-20211114151311410.png" alt="image-20211114151311410"></p>
<ul>
<li><p>接下来就是查询表中的数据了，由于每次只能显示一行结果，所以要用limit 来逐个查询。payload为 -1’  union select * from geekuser limit 0,1#</p>
<p>根据下图可得geekuser表就一行信息</p>
</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/image-20211114152541788.png" alt="image-20211114152541788"></p>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/image-20211114152403799.png" alt="image-20211114152403799"></p>
<ul>
<li>接下来暴力破解l0ve1ysq1表 payload为-1’  union select * from l0ve1ysq1 limit 0,1#。在第15行找到flag</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/image-20211114154321739.png" alt="image-20211114154321739"></p>
]]></content>
      <categories>
        <category>ctf习题</category>
      </categories>
      <tags>
        <tag>web练习题</tag>
        <tag>BUUCTF</tag>
        <tag>sql注入</tag>
        <tag>information_schema库注入</tag>
      </tags>
  </entry>
  <entry>
    <title>极客大挑战2019_Secret</title>
    <url>/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Secret/</url>
    <content><![CDATA[<p>​       这个题主要考查的是php封装协议。本人小白一个，有错希望大佬指出，如有更好的方法欢迎交流。</p>
<span id="more"></span>

<ul>
<li>F12查看前端源码，发现一个隐藏的超链接与背景融为一体都是黑色，所以改变一下</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Secret/image-20211114131311286.png" alt="image-20211114131311286"></p>
<ul>
<li>与背景融为一体都是黑色，所以改变一下颜色，把black改为red结果如下图</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Secret/image-20211114131539193.png" alt="image-20211114131539193"></p>
<ul>
<li>点击链接后页面时是下列第一张图，然后点击SECRET返回的页面是第二张图，前端没有发现什么隐藏信息，抓包试一下</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Secret/image-20211114131648260.png" alt="image-20211114131648260"></p>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Secret/image-20211114131752450.png" alt="image-20211114131752450"></p>
<ul>
<li>抓包结果如下图，发现网页跳转，查看响应包时，发现了隐藏信息secr3t.php</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Secret/image-20211114132152965.png" alt="image-20211114132152965"></p>
<ul>
<li>访问secr3t.php，如下图，页面上有php代码，是简单的过滤了传进去的file</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Secret/image-20211114132632501.png" alt="image-20211114132632501"></p>
<ul>
<li><p>访问flag.php文件后，如下图所示，flag没有像起初的那个超链接一样隐藏在页面中，所以猜测是隐藏在后端代码中，所以构建payload：</p>
<p>?file=php://filter/read=convert.base64-encode/resource=flag.php</p>
</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Secret/image-20211114133022068.png" alt="image-20211114133022068"></p>
<ul>
<li>页面上显示了basse64加密后的源码</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Secret/image-20211114134251536.png" alt="image-20211114134251536"></p>
<ul>
<li>解密后得到flag</li>
</ul>
<p><img src="/2021/11/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Secret/image-20211114134443588.png" alt="image-20211114134443588"></p>
]]></content>
      <categories>
        <category>ctf习题</category>
      </categories>
      <tags>
        <tag>web练习题</tag>
        <tag>BUUCTF</tag>
        <tag>文件包含</tag>
      </tags>
  </entry>
  <entry>
    <title>极客大挑战2019Havefun</title>
    <url>/2021/11/02/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Havefun/</url>
    <content><![CDATA[<p>这个较为基础，建议看了之后还不懂的朋友学习一下php，本人小白一个，知识有限，不足之处大家见谅!</p>
<span id="more"></span>

<ul>
<li><p>打开靶场，就只有一只猫，F12后，发现一段PHP代码，构建payload</p>
<p><img src="/2021/11/02/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019Havefun/image-20211102195134710.png" alt="image-20211102195134710"></p>
</li>
</ul>
<p>是一个较为简单的php代码审计，主要考察点在于php中的$_GET的用法</p>
]]></content>
      <categories>
        <category>ctf习题</category>
      </categories>
      <tags>
        <tag>web练习题</tag>
        <tag>BUUCTF</tag>
      </tags>
  </entry>
</search>
